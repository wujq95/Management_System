<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wujq.mapper.TypeMapper" >
    <resultMap id="BaseResultMap" type="com.wujq.domain.Type" >
        <id column="type_id" property="type_id" jdbcType="INTEGER" />
        <result column="type_name" property="type_name" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="type_columns" >
        type_id, type_name
    </sql>
    <select id="load" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="type_columns" />
        from type
        where type_id = #{type_id,jdbcType=INTEGER}
    </select>
    <delete id="delete" parameterType="java.lang.Integer" >
        delete from type
        where type_id = #{type_id,jdbcType=INTEGER}
    </delete>
    <insert id="add" parameterType="com.wujq.domain.Type" >
        insert into type
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="type_id != null" >
                type_id,
            </if>
            <if test="type_name != null" >
                type_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="type_id != null" >
                #{type_id,jdbcType=INTEGER},
            </if>
            <if test="type_name != null" >
                #{type_name,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="update" parameterType="com.wujq.domain.Type" >
        update type
        <set >
            <if test="type_name != null" >
                type_name = #{type_name,jdbcType=VARCHAR},
            </if>
        </set>
        where type_id = #{type_id,jdbcType=INTEGER}
    </update>
    <select id="typeList" parameterType="map" resultMap="BaseResultMap">
        select * from type
        <where>
            <if test="type.type_name != null and type.type_name != ''">
                and type_name like concat ('%',#{type.type_name},'%')
            </if>

        </where>
        limit #{beg},#{num}
    </select>
    <select id="count" parameterType="map" resultType="integer">
        select count(*) from type
        <where>
            <if test="type.type_name != null and type.type_name != ''">
                and type_name like concat ('%',#{type.type_name},'%')
            </if>

        </where>
    </select>
    <select id="typeAllList"  resultMap="BaseResultMap">
    	select * from type
    </select>
</mapper>