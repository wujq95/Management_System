<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wujq.mapper.RoleMapper" >
    <resultMap id="BaseResultMap" type="com.wujq.domain.Role" >
        <id column="role_id" property="role_id" jdbcType="INTEGER" />
        <result column="role_name" property="role_name" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="role_columns" >
        role_id, role_name
    </sql>
    <select id="load" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="role_columns" />
        from role
        where role_id = #{role_id,jdbcType=INTEGER}
    </select>
    <delete id="delete" parameterType="java.lang.Integer" >
        delete from role
        where role_id = #{role_id,jdbcType=INTEGER}
    </delete>
    <insert id="add" parameterType="com.wujq.domain.Role" >
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="role_id != null" >
                role_id,
            </if>
            <if test="role_name != null" >
                role_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="role_id != null" >
                #{role_id,jdbcType=INTEGER},
            </if>
            <if test="role_name != null" >
                #{role_name,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="update" parameterType="com.wujq.domain.Role" >
        update role
        <set >
            <if test="role_name != null" >
                role_name = #{role_name,jdbcType=VARCHAR},
            </if>
        </set>
        where role_id = #{role_id,jdbcType=INTEGER}
    </update>
    <select id="roleList" parameterType="map" resultMap="BaseResultMap">
        select * from role
        <where>
            <if test="role.role_name != null and role.role_name != ''">
                and role_name like concat ('%',#{role.role_name},'%')
            </if>

        </where>
        limit #{beg},#{num}
    </select>
    <select id="count" parameterType="map" resultType="integer">
        select count(*) from role
        <where>
            <if test="role.role_name != null and role.role_name != ''">
                and role_name like concat ('%',#{role.role_name},'%')
            </if>

        </where>
    </select>
    <select id="roleAllList"  resultMap="BaseResultMap">
    	select * from role 
    </select>
</mapper>